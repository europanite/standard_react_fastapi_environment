services:
  db_test:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: app_test
    ports: []          
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d app_test"]
      interval: 2s
      timeout: 2s
      retries: 15
  backend_test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+psycopg://test:test@db_test:5432/app_test
      PYTHONUNBUFFERED: "1"
    depends_on:
      db_test:
        condition: service_healthy
    volumes:
      - ./backend/app:/app:ro
      - ./backend/tests:/tests:ro
    command: ["pytest", "-q", "--maxfail=1", "--disable-warnings"]
  frontend_test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
    working_dir: /app
    environment:
      CI: "1"
      EXPO_TUNNEL: ${EXPO_TUNNEL}
      EXPO_DEVTOOLS_LISTEN_ADDRESS: ${EXPO_DEVTOOLS_LISTEN_ADDRESS}
      REACT_NATIVE_PACKAGER_HOSTNAME: ${REACT_NATIVE_PACKAGER_HOSTNAME}
      EXPO_PUBLIC_API_HOST: ${EXPO_PUBLIC_API_HOST}
      EXPO_PUBLIC_API_PORT: ${EXPO_PUBLIC_API_PORT}
      EXPO_PUBLIC_API_BASE: ${EXPO_PUBLIC_API_BASE}
    volumes:
      - ./frontend/app:/app
    command: ["npm", "test", "--", "--ci", "--runInBand"]