services:
  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      PYTHONPATH: /app
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    volumes:
      - ./backend/app:/app
    command: uvicorn main:app --host 0.0.0.0 --port ${BACKEND_PORT} --reload

    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    working_dir: /app
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/app:/app
    environment:
      EXPO_TUNNEL: ${EXPO_TUNNEL}
      EXPO_DEVTOOLS_LISTEN_ADDRESS: "0.0.0.0"
      EXPO_PUBLIC_API_BASE: "http://localhost:8000"   # for browser
    # Expo/Metro
    ports:
      - "19000:19000"  # Expo dev server (Metro)
      - "19001:19001"  # React Native debugger(old)
      - "19002:19002"  # Expo web UI
      - "8081:8081"    # Metro bundler
    command: >
      sh -c "
        npm install &&
        npx expo start
          --host 0.0.0.0
      "
    restart: unless-stopped

volumes:
  dbdata:
